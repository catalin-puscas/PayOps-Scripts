#!/bin/bash

# Define clusters and namespaces statically
declare -A clusters_and_namespaces=(
  ["pct-prod-ycrm"]="rcash ycrm"
  ["pct-prod-payops"]="elevatenet rcash ycrm"
  ["pct-prod-mlai"]="mlai"
  # Add more clusters and their corresponding namespaces here
)

# Function to check for problematic pod statuses in a cluster's namespaces
check_pod_statuses() {
  local cluster=$1
  shift  # Shift to the next arguments which are the namespaces
  local namespaces=("$@")

  echo "Checking cluster: $cluster"

  # Set the Kubernetes context to the current cluster
  if kubectl config get-contexts "$cluster" > /dev/null 2>&1; then
    kubectl config use-context "$cluster"
  else
    echo "Error: No context exists with the name: $cluster"
    return
  fi

  # Loop through each namespace for the cluster
  for namespace in "${namespaces[@]}"; do
    echo "Checking namespace: $namespace"

    # Get pods with problematic statuses in the namespace
    kubectl get pods -n "$namespace" --no-headers \
      | awk '{print $1, $3}' \
      | while read -r pod status; do
        if [[ "$status" == "ImagePullBackOff" || "$status" == "Error" || "$status" == "Err" || "$status" == "ContainerCreating" ]]; then
          echo "Cluster: $cluster, Namespace: $namespace, Pod: $pod, Status: $status"
        fi
      done
  done
}

# Loop through the clusters and their namespaces
for cluster in "${!clusters_and_namespaces[@]}"; do
  # Get the namespaces for the current cluster
  namespaces="${clusters_and_namespaces[$cluster]}"

  # Call the function to check pod statuses for the given cluster and namespaces
  check_pod_statuses "$cluster" $namespaces
done
